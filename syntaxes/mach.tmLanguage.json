{
    "scopeName": "source.mach",
    "patterns": [
        { "include": "#comments" },
        { "include": "#strings" },
        { "include": "#characters" },
        { "include": "#numbers" },
        { "include": "#keywords" },
        { "include": "#types" },
        { "include": "#intrinsics" },
        { "include": "#declarations" },
        { "include": "#operators" },
        { "include": "#identifiers" }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.number-sign.mach",
                    "match": "#.*$"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.mach",
                    "begin": "\"",
                    "end": "\"",
                    "beginCaptures": {
                        "0": { "name": "punctuation.definition.string.begin.mach" }
                    },
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.string.end.mach" }
                    },
                    "patterns": [
                        { "include": "#escape" }
                    ]
                }
            ]
        },
        "characters": {
            "patterns": [
                {
                    "name": "constant.character.mach",
                    "begin": "'",
                    "end": "'",
                    "beginCaptures": {
                        "0": { "name": "punctuation.definition.char.begin.mach" }
                    },
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.char.end.mach" }
                    },
                    "patterns": [
                        { "include": "#escape" }
                    ]
                }
            ]
        },
        "escape": {
            "patterns": [
                {
                    "name": "constant.character.escape.mach",
                    "match": "\\\\(?:[\\\"'0ntr])"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.mach",
                    "match": "\\b(?:0[xX][0-9A-Fa-f_]+|0[bB][01_]+|0[oO][0-7_]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?)\\b"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "storage.modifier.mach",
                    "match": "\\bpub\\b"
                },
                {
                    "name": "keyword.declaration.mach",
                    "match": "\\b(?:use|ext|def|val|var|fun|str|uni)\\b"
                },
                {
                    "name": "keyword.control.mach",
                    "match": "\\b(?:if|or|for|brk|cnt|ret|asm)\\b"
                },
                {
                    "name": "constant.language.mach",
                    "match": "\\bnil\\b"
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "name": "storage.type.primitive.mach",
                    "match": "\\b(?:u8|u16|u32|u64|i8|i16|i32|i64|f16|f32|f64|ptr)\\b"
                },
                {
                    "name": "support.type.alias.mach",
                    "match": "\\b(?:bool|string|char)\\b"
                }
            ]
        },
        "intrinsics": {
            "patterns": [
                {
                    "name": "support.function.intrinsic.mach",
                    "match": "\\b(?:len|size_of|align_of|offset_of|type_of|va_count|va_arg)\\b"
                }
            ]
        },
        "declarations": {
            "patterns": [
                {
                    "name": "meta.definition.function.mach",
                    "match": "\\b(?:pub\\s+)?fun\\s+([A-Za-z_][A-Za-z0-9_]*)\\s*\\(",
                    "captures": {
                        "1": { "name": "entity.name.function.mach" }
                    }
                },
                {
                    "name": "meta.declaration.type.mach",
                    "match": "\\b(?:pub\\s+)?(?:str|uni)\\s+([A-Za-z_][A-Za-z0-9_]*)",
                    "captures": {
                        "1": { "name": "entity.name.type.mach" }
                    }
                },
                {
                    "name": "meta.declaration.alias.mach",
                    "match": "\\b(?:pub\\s+)?def\\s+([A-Za-z_][A-Za-z0-9_]*)\\b",
                    "captures": {
                        "1": { "name": "entity.name.type.mach" }
                    }
                },
                {
                    "name": "meta.declaration.binding.mach",
                    "match": "\\b(?:pub\\s+)?(?:val|var)\\s+([A-Za-z_][A-Za-z0-9_]*)\\b",
                    "captures": {
                        "1": { "name": "variable.other.definition.mach" }
                    }
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.mach",
                    "match": "==|!=|<=|>=|<<|>>|&&|\\|\\||::|\\+|-|\\*|/|%|=|<|>|!|~|@|\\?|\\.\\.\\."
                }
            ]
        },
        "identifiers": {
            "patterns": [
                {
                    "name": "variable.other.mach",
                    "match": "\\b[A-Za-z_][A-Za-z0-9_]*\\b"
                }
            ]
        }
    }
}
